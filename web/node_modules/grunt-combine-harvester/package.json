{
  "name": "grunt-combine-harvester",
  "description": "Scans through source code for \"@requires\" statements and produces a combined file which satisfies the dependencies",
  "version": "0.1.0",
  "homepage": "https://github.com/chrisjohnson1988/grunt-combine-harvester",
  "author": {
    "name": "Christopher Johnson",
    "email": "chrisajohnson1988@gmail.com"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/chrisjohnson1988/grunt-combine-harvester"
  },
  "bugs": {
    "url": "https://github.com/chrisjohnson1988/grunt-combine-harvester/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/chrisjohnson1988/grunt-combine-harvester/blob/master/LICENSE-MIT"
    }
  ],
  "main": "Gruntfile.js",
  "engines": {
    "node": ">= 0.8.0"
  },
  "scripts": {
    "test": "grunt test"
  },
  "devDependencies": {
    "grunt-contrib-jshint": "~0.6.0",
    "grunt-contrib-clean": "~0.4.0",
    "grunt-contrib-nodeunit": "~0.2.0",
    "grunt": "~0.4.1"
  },
  "peerDependencies": {
    "grunt": "~0.4.1"
  },
  "keywords": [
    "gruntplugin",
    "toposort",
    "requires",
    "dependencies",
    "Openlayers",
    "compiler"
  ],
  "readme": "# grunt-combine-harvester\r\n\r\n[![Build Status](https://travis-ci.org/chrisjohnson1988/grunt-combine-harvester.png?branch=master)](https://travis-ci.org/chrisjohnson1988/grunt-combine-harvester)\r\n\r\n> Scans through source code for \"@requires\" statements and produces a combined file which satisfies the dependencies\r\n\r\nYou may find this library useful for building custom versions of projects like [OpenLayers](https://github.com/openlayers/openlayers) for use in your own grunt project.\r\n\r\n## Getting Started\r\nThis plugin requires Grunt `~0.4.1`\r\n\r\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\r\n\r\n```shell\r\nnpm install grunt-combine-harvester --save-dev\r\n```\r\n\r\nOnce the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\r\n\r\n```js\r\ngrunt.loadNpmTasks('grunt-combine-harvester');\r\n```\r\n\r\n## The \"combine_harvester\" task\r\n\r\n### Overview\r\nIn your project's Gruntfile, add a section named `combine_harvester` to the data object passed into `grunt.initConfig()`.\r\n\r\n```js\r\ngrunt.initConfig({\r\n  combine_harvester: {\r\n    options: {\r\n      // Task-specific options go here.\r\n    },\r\n    your_target: {\r\n      // Target-specific file lists and/or options go here.\r\n    },\r\n  },\r\n})\r\n```\r\n\r\n### Options\r\n\r\n#### options.regex\r\nType: `Regex`\r\nDefault value: `/@requires?:?\\s+(\\S*)\\s*/g`\r\n\r\nThe regex to be used by the default harvester function to find dependencies in scanned files\r\n\r\n#### options.root\r\nType: `String`\r\nDefault value: ``\r\n\r\nA string value that is used to prefix the values of @requires statements, so that the resultant string can be used to locate the dependency relative to the cwd.\r\n\r\nThis must end in '/' if you want to use a directory as a root\r\n\r\n#### options.harvester\r\nType: `function`\r\nDefault value: `default_harvester`\r\n\r\nThe function which performs the harvesting of source code, to return a list of fully qualified dependencies to harvest. \r\n\r\n### Usage Examples\r\n\r\n#### Default Options\r\nIn this example, a root is specified. So if the `dependency1` file has the content `@requires dependency3`, the generated result would be the concatenation: \r\n`dependency3 + dependency1 + dependency2`\r\n\r\n```js\r\ngrunt.initConfig({\r\n  combine_harvester: {\r\n    options: {\r\n      root: 'src/'\r\n    },\r\n    files: {\r\n      'dest/default_options': ['src/dependency1', 'src/dependency2'],\r\n    },\r\n  },\r\n})\r\n```\r\n\r\n## Contributing\r\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [Grunt](http://gruntjs.com/).\r\n\r\n## Release History\r\n_(Nothing yet)_\r\n",
  "readmeFilename": "README.md",
  "_id": "grunt-combine-harvester@0.1.0",
  "dist": {
    "shasum": "f614a0f817453ebc40a45abad8947eae695b8e2b",
    "tarball": "http://registry.npmjs.org/grunt-combine-harvester/-/grunt-combine-harvester-0.1.0.tgz"
  },
  "_from": "grunt-combine-harvester@0.1.0",
  "_npmVersion": "1.3.8",
  "_npmUser": {
    "name": "chrisjohnson1988",
    "email": "c.johnson4@lancaster.ac.uk"
  },
  "maintainers": [
    {
      "name": "chrisjohnson1988",
      "email": "c.johnson4@lancaster.ac.uk"
    }
  ],
  "directories": {},
  "_shasum": "f614a0f817453ebc40a45abad8947eae695b8e2b",
  "_resolved": "https://registry.npmjs.org/grunt-combine-harvester/-/grunt-combine-harvester-0.1.0.tgz"
}
