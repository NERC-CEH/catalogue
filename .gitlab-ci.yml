variables:
  CONTAINER_APPLICATION_IMAGE: registry.gitlab.ceh.ac.uk/eip/catalogue:app-$CI_BUILD_REF_NAME
  CONTAINER_SOLR_IMAGE:        registry.gitlab.ceh.ac.uk/eip/catalogue:solr-$CI_BUILD_REF_NAME
  CONTAINER_MAPSERVER_IMAGE:   registry.gitlab.ceh.ac.uk/eip/catalogue:mapserver-$CI_BUILD_REF_NAME
  DOCKER_DAEMON_ARGS:          -g /cache/docker
  DEPLOYMENT_SCRIPT: https://gitlab.ceh.ac.uk/scripts/deployment/raw/master/puppet-deploy.sh
  NODE_KEY: catalogue_version
  NODE_VALUE: $CI_BUILD_REF_NAME

stages:
  - build
  - test
  - docker
  - deploy

mirror:
  stage: build
  image: buildpack-deps:xenial-scm
  script:
    - git push -q --prune https://$GITHUB_USERNAME:$GITHUB_PASSWORD@github.com/NERC-CEH/catalogue.git +refs/remotes/origin/*:refs/heads/* +refs/tags/*:refs/tags/*

java:
  stage: build
  image: openjdk:8
  script:
    - ./gradlew --build-cache :java:clean :java:build :web:grunt_default
  artifacts:
    when: always
    paths:
      - java/build/libs/ROOT.war
      - web/src/vendor/
      - web/src/css/
      - web/src/scripts/main-out.js

rspec:
  stage: test
  image: gitlab/dind
  before_script:
    - echo JIRA_USERNAME=$JIRA_USERNAME > secrets.env
    - echo JIRA_PASSWORD=$JIRA_PASSWORD >> secrets.env
    - echo PLONE_USERNAME=$PLONE_USERNAME >> secrets.env
    - echo PLONE_PASSWORD=$PLONE_PASSWORD >> secrets.env
    - rm -rf datastore
    - mkdir datastore
    - cp fixtures/datastore/REV-1/* datastore
    - cd datastore
    - git init
    - git config user.name 'CI'
    - git config user.email ci@localhost
    - git add --all
    - git commit --message 'test data'
    - cd -
    - docker run --rm -v /var/run/docker.sock:/var/run/docker.sock -v $(pwd):$(pwd) -w $(pwd) docker/compose:1.16.1 -f docker-compose.yml -f docker-compose.selenium.yml up --force-recreate -d firefox chrome
  script:
    - docker run --rm -v /var/run/docker.sock:/var/run/docker.sock -v $(pwd):$(pwd) -w $(pwd) docker/compose:1.16.1 -f docker-compose.yml -f docker-compose.selenium.yml run ruby_test
  after_script:
    - docker run --rm -v /var/run/docker.sock:/var/run/docker.sock -v $(pwd):$(pwd) -w $(pwd) docker/compose:1.16.1 -f docker-compose.yml -f docker-compose.selenium.yml down --volumes
  artifacts:
    when: always
    paths:
      - test-reports

.deployment_template: &deployment_definition # Hidden deployment definition for docker builds
  stage: docker
  image: gitlab/dind
  only:
    - tags

build_application:
  <<: *deployment_definition
  script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN registry.gitlab.ceh.ac.uk
    - docker build -t $CONTAINER_APPLICATION_IMAGE .
    - docker push $CONTAINER_APPLICATION_IMAGE

build_solr:
  <<: *deployment_definition
  script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN registry.gitlab.ceh.ac.uk
    - docker build -t $CONTAINER_SOLR_IMAGE solr
    - docker push $CONTAINER_SOLR_IMAGE

build_mapserver:
  <<: *deployment_definition
  script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN registry.gitlab.ceh.ac.uk
    - docker build -t $CONTAINER_MAPSERVER_IMAGE mapserver
    - docker push $CONTAINER_MAPSERVER_IMAGE

.puppet_deploy: &puppet_deployment_definition
  image: ruby:2
  stage: deploy
  script:
    - curl $DEPLOYMENT_SCRIPT | bash
  only:
    - tags

deploy_production:
  <<: *puppet_deployment_definition
  variables:
    SERVER: cig-prod.nerc-lancaster.ac.uk
  environment:
    name: production
    url:  https://catalogue.ceh.ac.uk/eidc/documents
  when: manual

deploy_staging:
  <<: *puppet_deployment_definition
  variables:
    SERVER: cig-staging.nerc-lancaster.ac.uk
  environment:
    name: staging
    url:  https://catalogue-staging.ceh.ac.uk/eidc/documents
