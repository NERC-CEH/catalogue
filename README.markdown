# CEH Information Gateway - Vagrant Box

This is the CEH development box, it will create an instance of the CEH Catalogue along with it's supporting services (e.g. solr, mapserver)

## Structure

Inside the vagrant box there are a few git repositories which are checked out. 

Directories will be shared with your host machine unless the environment variable *VAGRANT_DISABLE_SHARING* is set to true

### /opt/ceh-catalogue -> ssh://git@stash.ceh.ac.uk:7999/cig/catalogue.git

  A dump of the software repository, this contains things like the templates for the 
  content generated by the web application.

  This directory will be mapped to your host machine. See **catalogue** for the contents.

### /etc/ceh-catalogue -> ssh://git@stash.ceh.ac.uk:7999/cig/catalogue-config.git

  This directory contains all of the configuration options for all of the environments.

  It is the development.properties which is relevant for the vagrant box.


### /var/ceh-catalogue/datastore -> ssh://git@stash.ceh.ac.uk:7999/cig/tcExport.git

  This contains a dump of test data for the vagrant box to use. 

## Getting started

To get the project running. Install :

* vagrant
* vagrant_vmware plugin

Then in a bash window run 

    vagrant up

### Having trouble getting it up? - When resuming

This is probally because the shared folders from you host are attached to your vagrant box after startup. This means that certain services are kicked off before the data they require is present.

To get around this, we maintain a bash script of all the services which need restarting.

    ./vagrant-resume.sh

Once you are up and running, try visiting one of the [metadata](https://localhost:8080/documents/ff55462e-38a4-4f30-b562-f82ff263d9c3) documents in your browser. Note that the server is using **https** on port 8080

### Java development

To have the code you are currently developing running in the vagrant box link the WAR file in the build directory to the Tomcat webapps folder.

    sudo service tomcat7-ceh-catalogue stop
    sudo rm -rf /home/tomcat7/ceh-catalogue/webapps/ROOT*
    ln -s /opt/ceh-catalogue/java/target/ROOT.war /home/tomcat7/ceh-catalogue/webapps/
    ls -lAh /home/tomcat7/ceh-catalogue/webapps/
    sudo service tomcat7-ceh-catalogue start

## Testing

The vagrant box can be functionally tested using capybara and selenium. The tests for this are written in rspec, and drive browsers hosted on the [selenium grid](http://bamboo.ceh.ac.uk:4444/grid/console). To run from a windows box you will need to:

* Making contact with the selenium grid
  
  You will need to make sure that your machine can be accessed by the Selenium Grid of browsers. By default windows firewall will block this. Add an **Incoming Rule** to the firewall to open port **8080**.
  
* Install ruby + [bundler](http://bundler.io/) 

  If you are using babun, you can install all the prerequisite packages using pact. If you have a traditional ruby windows installation already, make sure you take this off the PATH variable or uninstall it altogether.

        pact install ruby
        pact install libiconv
        pact install patch
        pact install gcc4-g++
        pact install libxml2
        pact install libxml2-devel
        pact install libxslt
        pact install libxslt-devel
        gem install nokogiri -- --use-system-libraries
        gem install bundler

* Install the gem bundle using. Nokogiri will be installed here and may need to build some components. This step may take some time.

        bundle install

* Then you can execute your tests in parallel

        bundle exec rake
  This calls :grab_ids and :parallel_spec

* You can specify a particular test group to test by calling the specific rspec task:

        bundle exec rake --tasks
  Lists the available rake tasks. Not all can be run from workstations
        
        bundle exec rake chrome_spec

* Sit back and wait for the results of your test suite
