# CEH Information Gateway - Vagrant Box

This is the CEH development box, it will create an instance of the CEH Catalogue along with it's supporting services (e.g. solr, postgres)

## Structure

Inside the vagrant box there are a few git repositories which are checked out. 

### /opt/ceh-catalogue -> ssh://git@stash.ceh.ac.uk:7999/cig/catalogue.git

  A dump of the software repository, this contains things like the templates for the 
  content generated by the web application.

  This directory will be mapped to your host machine. See **catalogue** for the contents.

## Getting started

To get the project running. Install :

* vagrant
* vagrant_vmware plugin

Then in a bash window run 

    vagrant up

### Java development

The vagrant box will run and deploy built versions of the java catalogue code from *catalogue/java/target/ROOT.war*. This happens during a vagrant provision. You can build the application with maven at the command line:

    mvn -f catalogue/java/pom.xml clean install
    vagrant provision --provision-with puppet_server

Or alternatively, you can get the latest built version from [nexus](http://nexus.nerc-lancaster.ac.uk/service/local/artifact/maven/redirect?r=releases&g=uk.ac.ceh.gateway&a=Catalogue&v=LATEST&e=war)

    # At the root of your repository
    mkdir -p catalogue/java/target
    wget 'http://nexus.nerc-lancaster.ac.uk/service/local/artifact/maven/redirect?r=releases&g=uk.ac.ceh.gateway&a=Catalogue&v=LATEST&e=war' -O catalogue/java/target/ROOT.war
    vagrant provision --provision-with puppet_server


## Testing

The vagrant box can be functionally tested using capybara and selenium. The tests for this are written in rspec, and drive browsers hosted on the [selenium grid](http://bamboo.ceh.ac.uk:4444/grid/console). To run from a windows box you will need to:

* Making contact with the selenium grid
  
  You will need to make sure that your machine can be accessed by the Selenium Grid of browsers. By default windows firewall will block this. Add an **Incoming Rule** to the firewall to open port **8080**.
  
* Install ruby + [bundler](http://bundler.io/) 

  If you are using babun, you can install all the prerequisite packages using pact. If you have a traditional ruby windows installation already, make sure you take this off the PATH variable or uninstall it altogether.

        pact install ruby
        pact install libiconv
        pact install patch
        pact install gcc4-g++
        pact install libxml2
        pact install libxml2-devel
        pact install libxslt
        pact install libxslt-devel
        gem install nokogiri -- --use-system-libraries
        gem install bundler

* Install the gem bundle using. Nokogiri will be installed here and may need to build some components. This step may take some time.

        bundle install

* Then you can execute your tests in parallel

        bundle exec rake
  This calls :grab_ids and :parallel_spec

* You can specify a particular test group to test by calling the specific rspec task:

        bundle exec rake --tasks
  Lists the available rake tasks. Not all can be run from workstations
        
        bundle exec rake chrome_spec

* Sit back and wait for the results of your test suite

### Updating test metadata records
Test metadata records are available in the /fixtures directory. When changes are made to these test documents they need to be loaded into the vagrant datastore.
      
    vagrant ssh
    cd /vagrant/vagrant_provision
    sudo rm -rf /var/ceh-catalogue/datastore
    sudo ./test-data.sh
